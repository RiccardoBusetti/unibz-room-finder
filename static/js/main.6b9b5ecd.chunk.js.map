{"version":3,"sources":["contexts/AppContext.js","hooks/useAppContext.js","components/AvailabilityResults.jsx","components/SearchBar.jsx","components/SearchCard.jsx","api/base.js","api/availability.js","utils/functions.js","theming/theme.js","App.js","hooks/useData.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","useStyles","makeStyles","theme","resultsContainer","borderRadius","padding","spacing","resultsContainerEmpty","color","backgroundImage","backgroundRepeat","backgroundSize","height","resultsContainerFull","divider","marginTop","Availability","availability","Grid","container","item","xs","Typography","variant","day","from","to","AvailabilityResults","classes","appData","enqueueSnackbar","useSnackbar","error","isDayEmpty","isDayFull","availabilities","length","pageStyle","description","Paper","className","root","room","map","innerAvailability","index","Divider","inputRoot","fontSize","width","inputInput","paddingLeft","search","position","marginRight","marginLeft","searchIconContainer","pointerEvents","display","alignItems","justifyContent","loadingIndicatorContainer","searchIcon","SearchBar","performSearch","onSearching","isLoading","CircularProgress","disableShrink","size","thickness","SearchRounded","InputBase","placeholder","input","inputProps","onChange","event","target","value","onKeyPress","key","preventDefault","document","activeElement","blur","searchCard","boxShadow","datePicker","SearchCard","useState","setRoom","Date","selectedDay","setSelectedDay","checkAvailabilityFor","useEffect","direction","md","newRoom","isLoadingAvailability","onDayChange","AVAILABILITY_ENDPOINT","checkAvailability","date","cancelToken","a","console","log","axios","get","params","deviceTime","formatDateForServer","moment","format","responsiveFontSizes","createTheme","palette","primary","main","secondary","light","margin","unibz","Home","href","rel","App","data","undefined","setAvailability","setLoadingAvailability","localSource","setLocalSource","setError","cancel","newLocalSource","CancelToken","source","token","response","useData","maxSnack","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b9b5ecd.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst AppContext = createContext({});\n\nexport default AppContext;\n","import { useContext } from \"react\";\nimport AppContext from \"../contexts/AppContext\";\n\nexport default function useAppContext() {\n    return useContext(AppContext);\n}\n","import { Divider, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport useAppContext from '../hooks/useAppContext';\n\nconst useStyles = makeStyles((theme) => ({\n    resultsContainer: {\n        borderRadius: 20,\n        padding: theme.spacing(2)\n    },\n    resultsContainerEmpty: {\n        borderRadius: 20,\n        padding: theme.spacing(2),\n        color: 'white',\n        backgroundImage: 'url(https://i.pinimg.com/originals/86/74/a9/8674a918f3765e5ab9f1191ad5811713.gif)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        height: '256px'\n    },\n    resultsContainerFull: {\n        borderRadius: 20,\n        padding: theme.spacing(2),\n        color: 'white',\n        backgroundImage: 'url(https://c.tenor.com/djA9WbTjKOEAAAAC/angry-bird.gif)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        height: '256px'\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nfunction AvailabilityResults() {\n    const classes = useStyles();\n    const appData = useAppContext();\n\n    const { enqueueSnackbar } = useSnackbar();\n\n    if (appData.error) {\n        enqueueSnackbar(appData.error, { variant: \"error\" });\n        return <></>;\n    }\n\n    const availability = appData.availability;\n\n    const isDayEmpty = availability && availability.isDayEmpty;\n    const isDayFull = availability && !availability.isDayEmpty && availability.availabilities.length === 0;\n\n    var pageStyle = classes.resultsContainer;\n    if (isDayEmpty) {\n        pageStyle = classes.resultsContainerEmpty;\n    } else if (isDayFull) {\n        pageStyle = classes.resultsContainerFull;\n    }\n\n    var description = \"The following timeslots are available\";\n    if (isDayEmpty) {\n        description = \"The room is empty or does not exist 🤩\";\n    } else if (isDayFull) {\n        description = \"The room is full for the day 😭\";\n    }\n\n    return (\n        <>\n            {\n                availability &&\n                <Paper\n                    className={pageStyle}\n                    variant=\"outlined\"\n                >\n                    <Grid\n                        className={classes.root}\n                        container\n                        spacing={2}\n                    >\n                        <Grid item xs={12}>\n                            <Typography variant=\"h4\"><b>{availability.room}</b></Typography>\n                            <Typography variant=\"subtitle1\">{description}</Typography>\n                        </Grid>\n                        {\n                            !isDayEmpty &&\n                            !isDayFull &&\n                            availability.availabilities.map(((innerAvailability, index) => <Grid key={index} item xs={12}>\n                                <Availability availability={innerAvailability} />\n                                {index < availability.availabilities.length - 1 && <Divider className={classes.divider} />}\n                            </Grid>))\n                        }\n                        <Grid item xs={12}>\n                            <Typography variant=\"subtitle2\">\n                                <i>Please note that it is your responsability if you decide to go in a room without permission.\n                                    I do not take any responsability in case any problems will arise. This webpage is not affiliated with unibz and was developed to help students organize themselves.</i>\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            }\n        </>\n\n    )\n}\n\nfunction Availability({ availability }) {\n    return (\n        <Grid\n            container\n        >\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle2\">{availability.day}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"h6\"><b>{availability.from} - {availability.to}</b></Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default AvailabilityResults;","import { CircularProgress, InputBase } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SearchRounded } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    inputRoot: {\n        color: 'inherit',\n        fontSize: 18,\n        width: '100%',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1),\n        paddingLeft: `calc(1em + ${theme.spacing(1.5)}px)`,\n        width: '100%',\n    },\n    search: {\n        position: 'relative',\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    searchIconContainer: {\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    loadingIndicatorContainer: {\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    searchIcon: {\n        color: \"grey\",\n    },\n}));\n\nexport default function SearchBar({ performSearch, onSearching, isLoading }) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.search}>\n            <div className={classes.searchIconContainer}>\n                {isLoading ? (\n                    <CircularProgress\n                        variant=\"indeterminate\"\n                        disableShrink\n                        color=\"secondary\"\n                        size={20}\n                        thickness={4}\n                    />\n                ) : (\n                    <SearchRounded className={classes.searchIcon} />\n                )}\n            </div>\n            <InputBase\n                placeholder=\"Check availability by room name\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(event) => onSearching(event.target.value)}\n                onKeyPress={(event) => {\n                    if (event.key === 'Enter') {\n                        performSearch();\n                        event.preventDefault();\n                        document.activeElement.blur();\n                    }\n                }}\n            />\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchBar from './SearchBar';\nimport useAppContext from '../hooks/useAppContext';\nimport 'react-day-picker/lib/style.css';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\n\nconst useStyles = makeStyles((theme) => ({\n    searchCard: {\n        position: 'relative',\n        borderRadius: 20,\n        height: 'auto',\n        '&:hover': {\n            boxShadow: `0px 10px 25px -5px grey`,\n        }\n    },\n    datePicker: {\n        borderRadius: 20\n    }\n}));\n\nexport default function SearchCard() {\n    const classes = useStyles();\n    const appData = useAppContext();\n\n    const [room, setRoom] = useState();\n    const [selectedDay, setSelectedDay] = useState(new Date());\n\n    const performSearch = () => {\n        appData.checkAvailabilityFor(room, selectedDay);\n    }\n\n\n    useEffect(() => {\n        if (room) {\n            performSearch();\n        }\n    }, [selectedDay]);\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            spacing={2}\n        >\n            <Grid item xs={12} md={10}>\n                <Paper\n                    className={classes.searchCard}\n                    variant=\"outlined\"\n                >\n                    <SearchBar\n                        performSearch={performSearch}\n                        onSearching={(newRoom) => setRoom(newRoom)}\n                        isLoading={appData.isLoadingAvailability}\n                    />\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={2}>\n                <DayPickerInput\n                    className={classes.datePicker}\n                    value={selectedDay}\n                    onDayChange={day => {\n                        setSelectedDay(day);\n                        document.activeElement.blur();\n                    }\n                    } />\n            </Grid>\n        </Grid>\n    );\n}","export const BASE_URL = `https://elencho-scraper.herokuapp.com`;\n\nexport const AVAILABILITY_ENDPOINT = `${BASE_URL}/availability`;","import axios from 'axios';\nimport { AVAILABILITY_ENDPOINT } from './base';\n\nconst checkAvailability = async (room, date, cancelToken) => {\n    console.log(`Checking availability for ${room} on ${date}`);\n    return await axios.get(AVAILABILITY_ENDPOINT, {\n        params: { room, deviceTime: date },\n        cancelToken,\n    })\n};\n\nexport default checkAvailability;","import moment from \"moment\";\n\nexport const debounce = (func, timeout) => {\n    let timer;\n    return (...args) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => func.apply(this, args), timeout);\n    };\n};\n\nexport const formatDateForServer = (date) => {\n    return moment(date).format(\"YYYY-MM-DD HH:mm\")\n}\n\nexport const transformAvailabilities = (availabilities) => {\n    if (!availabilities) return []\n\n    return availabilities.map(availability => {\n        var day = undefined;\n        if (availability.from != null) {\n            day = moment(availability.from).format('LL')\n        } else if (availability.to != null) {\n            day = moment(availability.to).format('LL')\n        }\n\n        return {\n            day: day,\n            from: availability.from == null ? \"University opening\" : moment(availability.from).format(\"HH:mm\"),\n            to: availability.to == null ? \"University closing\" : moment(availability.to).format(\"HH:mm\")\n        }\n    })\n}","import { createTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nexport const themedBorderRadius = 20;\n\nexport default responsiveFontSizes(\n    createTheme({\n        palette: {\n            primary: {\n                main: '#007be4',\n            },\n            secondary: {\n                main: '#007be4',\n                light: '#007be4',\n            }\n        }\n    })\n);\n","import { Grid, makeStyles, MuiThemeProvider, Typography } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\nimport './App.css';\nimport AvailabilityResults from './components/AvailabilityResults';\nimport SearchCard from './components/SearchCard';\nimport AppContext from './contexts/AppContext';\nimport useData from './hooks/useData';\nimport theme from './theming/theme';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    margin: theme.spacing(2)\n  },\n  unibz: {\n    color: '#007be4'\n  }\n}));\n\nfunction App() {\n  const data = useData();\n\n  return (\n    <SnackbarProvider maxSnack={1}>\n      <AppContext.Provider value={data}>\n        <MuiThemeProvider theme={theme}>\n          <Home />\n        </MuiThemeProvider>\n      </AppContext.Provider>\n    </SnackbarProvider>\n  );\n}\n\nfunction Home() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={12} md={6}>\n        <Grid\n          container\n          direction=\"row\"\n          spacing={2}\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h3\"><b className={classes.unibz}>unibz</b> room finder</Typography>\n            <Typography variant=\"subtitle1\">\n              Made with ❤️ by <a href=\"https://riccardobusetti.xyz\" target=\"_blank\" rel=\"noreferrer\">Riccardo Busetti</a>\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <SearchCard />\n          </Grid>\n          <Grid item xs={12}>\n            <AvailabilityResults />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default App;\n","import { useState } from \"react\";\nimport checkAvailability from \"../api/availability\";\nimport { formatDateForServer, transformAvailabilities } from \"../utils/functions\";\nimport axios from 'axios';\n\nexport default function useData() {\n    const [availability, setAvailability] = useState(undefined);\n    const [isLoadingAvailability, setLoadingAvailability] = useState(false);\n    const [localSource, setLocalSource] = useState(undefined);\n    const [error, setError] = useState(undefined);\n\n    const checkAvailabilityFor = async (room, date) => {\n        if (localSource) {\n            localSource.cancel();\n            setLocalSource(undefined);\n        }\n\n        if (room) {\n            try {\n                setError(undefined);\n                setLoadingAvailability(true);\n                const newLocalSource = axios.CancelToken.source();\n                const response = await checkAvailability(room, formatDateForServer(date), newLocalSource.token);\n                setLocalSource(newLocalSource);\n                setLoadingAvailability(false);\n\n                if (response.data) {\n                    const data = {\n                        room: response.data.room,\n                        isDayEmpty: response.data.isDayEmpty,\n                        availabilities: transformAvailabilities(response.data.availabilities)\n                    };\n                    console.log(\"Availability received\");\n                    console.log(response.data);\n\n                    console.log(\"Mapped availabilities\");\n                    console.log(data);\n\n                    setAvailability(data);\n                }\n            } catch (err) {\n                setAvailability(undefined);\n                setLoadingAvailability(false);\n                setError(\"An error occurred while loading the room availabilities, try again.\");\n            }\n        } else {\n            setAvailability(undefined);\n        }\n    }\n\n    return {\n        availability,\n        error,\n        isLoadingAvailability,\n        checkAvailabilityFor\n    };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}